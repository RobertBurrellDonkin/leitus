#!/usr/bin/env python
#
# Copyright (c) Robert Burrell Donkin 2011
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#
# Leitus is a suite of higher level functions for cryptographic drives.
#
# Robert Burrell Donkin, 2011
#

from name.robertburrelldonkin.leitus import surface

#
#
# Scripting foo


surface.run(surface.standard())



##############################################################################
#
# Aborginal Sources
#
##############################################################################

##
## Creates an encrypted loopback drive.
##
##
##
#
#MAP_NAME=name-robertburrelldonkin-temp
#
#
#source name.robertburrelldonkin.linux.crypt_functions
#
#if [ -z $1 ]
#then
# echo "Usage <filename> <initial size in M>"
# exit 1
#fi
#
#if [ -e $1 ]
#then
# echo "File already exists"
# exit 1
#fi
#
#fillWithRandom $1 $2
#mountLoopDevice $1
#setUpLUKS $LoopDevice 
#openLUKS $LoopDevice $MAP_NAME
#makeFileSystem $MAP_NAME
#tidyUp $LoopDevice $MAP_NAME
#
#exit 0


## Closes an encrypted loopback drive.
##
##
##
#
#source name.robertburrelldonkin.linux.crypt_functions
#
#if [ -z $3 ]
#then
# echo "Usage <loop file> <map name> <mount point>"
# exit 1
#fi
#
#echo "Unmounting $3..."
#umount $3
#sleep 1
#tidyUp $1 $2
#exit 0



##
## Aim: Setup LUKS on the device.
##
#setUpLUKS() {
# if [ -z $1 ]
# then
#  echo "Usage: setUpsLUKS <filename>"
#  exit 1
# fi
#
# echo "Setting up LUKS on $1"
# cryptsetup luksFormat -c aes-cbc-essiv:sha256 $1
# if [ $? -eq 0 ]
# then
#  echo "Setup LUKS on $1"
# else
#  echo "LUKS setup on $1 failed."
#  exit 1
# fi
#}
#
#
##
## Aim: Map to an available name
##
#openLUKS() {
# if [ -z $2 ]
# then
#  echo "Usage: openLUKS <device> <map name>"
#  exit 1
# fi
#
# for name in `dmsetup ls | cut -f1`
# do
#  if [ "$name" == "$2" ] 
#  then
#   echo "/dev/mapper/$2 is already mapped."
#   exit 1
#  fi
# done
# echo "Opening $1 onto $2"
# cryptsetup luksOpen $1 $2
# if [ $? -eq 0 ]
# then
#  echo "Opened $1 on $2"
# else
#  echo "Failed to open $1 on $1."
#  exit 1
# fi
#}
#
#
##
## Tidy up
##
#tidyUp() {
# if [ -z $2 ]
# then
#  echo "Usage: tidyUp <loop device> <map name>"
#  exit 1
# fi
#
# echo "Closing and unmounting $1"
# sleep 2s
# cryptsetup luksClose $2
# sleep 1s
# losetup -d $1
# echo "Done."
#}
